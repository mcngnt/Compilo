.ORIG x3000
LD R6 CST13
BR IGNORE_CST13
CST13 .FILL #65023
IGNORE_CST13
AND R5 R5 #0
ADD R5 R5 R6
LD R4 CST14
BR IGNORE_CST14
CST14 .FILL #12500
IGNORE_CST14
ADD R4 R4 #2
LD R3 CST15
JMP R3 ; Jump to label FUN_USER_main
BR IGNORE_CST15
CST15 .FILL #12378
IGNORE_CST15
FUN_MULT
ADD R0 R0 #0
BRn MULT_CHANGE_SIGN
BR MULT_INIT
MULT_CHANGE_SIGN
NOT R0 R0
ADD R0 R0 #1
NOT R1 R1
ADD R1 R1 #1
MULT_INIT
AND R2 R2 #0
ADD R2 R2 R0
AND R0 R0 #0
MULT_LOOP
ADD R0 R0 R1
ADD R2 R2 #-1
BRz MULT_STOP
BR MULT_LOOP
MULT_STOP
RET
FUN_DIV
AND R2 R2 #0 ; Q
LD R2 DIV_ISNEG ; Set is_neg to 0
ADD R1 R1 #0
BRn DIV_A_NEG
BR DIV_A_POS
DIV_A_NEG
NOT R1 R1 ; Change A sign when negative
ADD R1 R1 #1
ADD R0 R0 #0
BRn DIV_AN_BN
BR DIV_AN_BP
DIV_A_POS
ADD R0 R0 #0
BRn DIV_AP_BN
BR DIV_AP_BP
DIV_AN_BN
NOT R0 R0
ADD R0 R0 #1
BR DIV_POS
DIV_AN_BP
BR DIV_NEG
DIV_AP_BN
NOT R0 R0
ADD R0 R0 #1
BR DIV_NEG
DIV_AP_BP
BR DIV_POS
DIV_NEG
ADD R3 R2 #1
ST R3 DIV_ISNEG ; IS_NEG <- 1
BR DIV_ENDSIGN
DIV_POS
BR DIV_ENDSIGN
DIV_ENDSIGN
; Compute the sign of the result in DIV_ISNEG
DIV_LOOP
NOT R3 R1
ADD R3 R3 #1
ADD R3 R3 R0 ; R3 <- R0 - R1 = B - R
BRp DIV_END_LOOP
AND R3 R3 #0
ADD R3 R3 R0
NOT R3 R3
ADD R3 R3 #1 ; R3 <- -B
ADD R1 R1 R3 ; R <- R - B
ADD R2 R2 #1
BR DIV_LOOP
DIV_END_LOOP
ADD R0 R2 #0
LD R3 DIV_ISNEG
BRz DIV_END
NOT R0 R0
ADD R0 R0 #1
DIV_END
RET
DIV_ISNEG .BLKW #1
FUN_MOD
AND R2 R2 #0 ; Q
ADD R1 R1 #0
BRn MOD_A_NEG
BR MOD_ENDSIGN
MOD_A_NEG
ADD R1 R1 R0
BRn MOD_A_NEG
MOD_ENDSIGN
; Compute the sign of the result in MOD_ISNEG
MOD_LOOP
NOT R3 R1
ADD R3 R3 #1
ADD R3 R3 R0 ; R3 <- R0 - R1 = B - R
BRp MOD_END_LOOP
AND R3 R3 #0
ADD R3 R3 R0
NOT R3 R3
ADD R3 R3 #1 ; R3 <- -B
ADD R1 R1 R3 ; R <- R - B
ADD R2 R2 #1
BR MOD_LOOP
MOD_END_LOOP
ADD R0 R1 #0
MOD_END
RET
FUN_USER_main
ADD R6 R6 #-1
LDR R5 R6 #0 ; Store R5 on the stack
ADD R6 R6 #-1
LDR R7 R6 #0 ; Store R7 on the stack
ADD R6 R6 #-1
AND R5 R5 #0
ADD R5 R5 R6 ; R5 <- R6
ADD R6 R6 #-1 ; Add variable y to the stack 
ADD R6 R6 #-1 ; Add variable z to the stack 
ADD R6 R6 #-1 ; Add variable p to the stack 
ADD R6 R6 #-1 ; Add variable x to the stack 
ADD R6 R6 #-1 ; Add variable w to the stack 
LD R0 CST12 ; R0 <- cst 5
BR IGNORE_CST12
CST12 .FILL #5
IGNORE_CST12
STR R0 R5 #-3
LD R0 CST10
STR R0 R4 #-1
BR IGNORE_CST10
CST10 .FILL #-3
IGNORE_CST10
LD R0 CST11
STR R0 R4 #-2
BR IGNORE_CST11
CST11 .FILL #0
IGNORE_CST11
LDR R0 R5 #-3
LDR R0 R4 #-1
STR R0 R5 #-2
LD R0 CST6
STR R0 R4 #-1
BR IGNORE_CST6
CST6 .FILL #-2
IGNORE_CST6
LD R0 CST7
STR R0 R4 #-2
BR IGNORE_CST7
CST7 .FILL #0
IGNORE_CST7
LDR R0 R5 #-2
STR R0 R4 #-1
LDR R0 R4 #-2
BRnp IGNORE_GOTO17
LD R3 CST16
JMP R3 ; Jump to label DEREF_ELSE8
BR IGNORE_CST16
CST16 .FILL #12428
IGNORE_CST16
IGNORE_GOTO17
LDR R0 R4 #-1
ADD R1 R0 R4
LDR R0 R1 #0
LD R3 CST18
JMP R3 ; Jump to label DEREF_ENDELSE8
BR IGNORE_CST18
CST18 .FILL #12431
IGNORE_CST18
DEREF_ELSE8
LDR R0 R4 #-1
ADD R1 R0 R5
LDR R0 R1 #0
DEREF_ENDELSE8
LDR R0 R4 #-2
BRnp IGNORE_GOTO20
LD R3 CST19
JMP R3 ; Jump to label DEREF_ELSE9
BR IGNORE_CST19
CST19 .FILL #12444
IGNORE_CST19
IGNORE_GOTO20
LDR R0 R4 #-1
ADD R1 R0 R4
LDR R0 R1 #0
LD R3 CST21
JMP R3 ; Jump to label DEREF_ENDELSE9
BR IGNORE_CST21
CST21 .FILL #12447
IGNORE_CST21
DEREF_ELSE9
LDR R0 R4 #-1
ADD R1 R0 R5
LDR R0 R1 #0
DEREF_ENDELSE9
ADD R0 R0 #1
STR R0 R1 #0
LD R0 CST2
STR R0 R4 #-1
BR IGNORE_CST2
CST2 .FILL #-2
IGNORE_CST2
LD R0 CST3
STR R0 R4 #-2
BR IGNORE_CST3
CST3 .FILL #0
IGNORE_CST3
LDR R0 R5 #-2
STR R0 R4 #-1
LDR R0 R4 #-2
BRnp IGNORE_GOTO23
LD R3 CST22
JMP R3 ; Jump to label DEREF_ELSE4
BR IGNORE_CST22
CST22 .FILL #12472
IGNORE_CST22
IGNORE_GOTO23
LDR R0 R4 #-1
ADD R1 R0 R4
LDR R0 R1 #0
LD R3 CST24
JMP R3 ; Jump to label DEREF_ENDELSE4
BR IGNORE_CST24
CST24 .FILL #12475
IGNORE_CST24
DEREF_ELSE4
LDR R0 R4 #-1
ADD R1 R0 R5
LDR R0 R1 #0
DEREF_ENDELSE4
LDR R0 R4 #-2
BRnp IGNORE_GOTO26
LD R3 CST25
JMP R3 ; Jump to label DEREF_ELSE5
BR IGNORE_CST25
CST25 .FILL #12488
IGNORE_CST25
IGNORE_GOTO26
LDR R0 R4 #-1
ADD R1 R0 R4
LDR R0 R1 #0
LD R3 CST27
JMP R3 ; Jump to label DEREF_ENDELSE5
BR IGNORE_CST27
CST27 .FILL #12491
IGNORE_CST27
DEREF_ELSE5
LDR R0 R4 #-1
ADD R1 R0 R5
LDR R0 R1 #0
DEREF_ENDELSE5
ADD R0 R0 #1
STR R0 R1 #0
ADD R0 R0 #-1
STR R0 R4 #0
LD R0 CST1 ; R0 <- cst 0
BR IGNORE_CST1
CST1 .FILL #0
IGNORE_CST1
LDR R7 R5 #-1 ; Restore R7
LDR R5 R5 #-2 ; Restore R5
STATIC_VAR
LVALUE_ISGLOBAL .BLKW #1
LVALUE_ADDR .BLKW #1
V_glob .BLKW #1
.END
; IGNORE_CST13 x3003
; FUN_MULT x300d
; MULT_CHANGE_SIGN x3010
; MULT_INIT x3014
; MULT_LOOP x3017
; MULT_STOP x301b
; FUN_DIV x301c
; DIV_A_NEG x3021
; DIV_A_POS x3026
; DIV_AN_BN x3029
; DIV_AN_BP x302c
; DIV_AP_BN x302d
; DIV_AP_BP x3030
; DIV_NEG x3031
; DIV_POS x3034
; DIV_ENDSIGN x3035
; DIV_LOOP x3035
; DIV_END_LOOP x3040
; DIV_END x3045
; FUN_MOD x3047
; MOD_A_NEG x304b
; MOD_ENDSIGN x304d
; MOD_LOOP x304d
; MOD_END_LOOP x3058
; MOD_END x3059
; FUN_USER_main x305a
; IGNORE_CST12 x3069
; IGNORE_CST10 x306e
; IGNORE_CST11 x3072
; IGNORE_CST6 x3079
; IGNORE_CST7 x307d
; DEREF_ELSE8 x308c
; DEREF_ENDELSE8 x308f
; DEREF_ELSE9 x309c
; DEREF_ENDELSE9 x309f
; IGNORE_CST2 x30a5
; IGNORE_CST3 x30a9
; DEREF_ELSE4 x30b8
; DEREF_ENDELSE4 x30bb
; DEREF_ELSE5 x30c8
; DEREF_ENDELSE5 x30cb
; IGNORE_CST1 x30d2
; STATIC_VAR x30d4
; .END x30d7
; --DEBUG---

