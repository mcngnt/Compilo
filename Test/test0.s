.ORIG x3000
LD R6 STACK
LD R5 STACK
LEA R4 STATIC
ADD R4 R4 #1
LD R3 CST5
JMP R3 ; Jump to label FUN_USER_main
BR IGNORE_CST5
CST5 .FILL #12373
IGNORE_CST5
FUN_MULT
ADD R0 R0 #0
BRn MULT_CHANGE_SIGN
BR MULT_INIT
MULT_CHANGE_SIGN
NOT R0 R0
ADD R0 R0 #1
NOT R1 R1
ADD R1 R1 #1
MULT_INIT
AND R2 R2 #0
ADD R2 R2 R0
AND R0 R0 #0
MULT_LOOP
ADD R0 R0 R1
ADD R2 R2 #-1
BRz MULT_STOP
BR MULT_LOOP
MULT_STOP
RET
FUN_DIV
AND R2 R2 #0 ; Q
LD R2 DIV_ISNEG ; Set is_neg to 0
ADD R1 R1 #0
BRn DIV_A_NEG
BR DIV_A_POS
DIV_A_NEG
NOT R1 R1 ; Change A sign when negative
ADD R1 R1 #1
ADD R0 R0 #0
BRn DIV_AN_BN
BR DIV_AN_BP
DIV_A_POS
ADD R0 R0 #0
BRn DIV_AP_BN
BR DIV_AP_BP
DIV_AN_BN
NOT R0 R0
ADD R0 R0 #1
BR DIV_POS
DIV_AN_BP
BR DIV_NEG
DIV_AP_BN
NOT R0 R0
ADD R0 R0 #1
BR DIV_NEG
DIV_AP_BP
BR DIV_POS
DIV_NEG
ADD R3 R2 #1
ST R3 DIV_ISNEG ; IS_NEG <- 1
BR DIV_ENDSIGN
DIV_POS
BR DIV_ENDSIGN
DIV_ENDSIGN
; Compute the sign of the result in DIV_ISNEG
DIV_LOOP
NOT R3 R1
ADD R3 R3 #1
ADD R3 R3 R0 ; R3 <- R0 - R1 = B - R
BRp DIV_END_LOOP
AND R3 R3 #0
ADD R3 R3 R0
NOT R3 R3
ADD R3 R3 #1 ; R3 <- -B
ADD R1 R1 R3 ; R <- R - B
ADD R2 R2 #1
BR DIV_LOOP
DIV_END_LOOP
ADD R0 R2 #0
LD R3 DIV_ISNEG
BRz DIV_END
NOT R0 R0
ADD R0 R0 #1
DIV_END
RET
DIV_ISNEG .BLKW #1
FUN_MOD
AND R2 R2 #0 ; Q
ADD R1 R1 #0
BRn MOD_A_NEG
BR MOD_ENDSIGN
MOD_A_NEG
ADD R1 R1 R0
BRn MOD_A_NEG
MOD_ENDSIGN
; Compute the sign of the result in MOD_ISNEG
MOD_LOOP
NOT R3 R1
ADD R3 R3 #1
ADD R3 R3 R0 ; R3 <- R0 - R1 = B - R
BRp MOD_END_LOOP
AND R3 R3 #0
ADD R3 R3 R0
NOT R3 R3
ADD R3 R3 #1 ; R3 <- -B
ADD R1 R1 R3 ; R <- R - B
ADD R2 R2 #1
BR MOD_LOOP
MOD_END_LOOP
ADD R0 R1 #0
MOD_END
RET
FUN_USER_main
ADD R6 R6 #-1
LDR R5 R6 #0 ; Store R5 on the stack
ADD R6 R6 #-1
LDR R7 R6 #0 ; Store R7 on the stack
ADD R6 R6 #-1
AND R5 R5 #0
ADD R5 R5 R6 ; R5 <- R6
ADD R6 R6 #-1 ; Add variable p to the stack 
ADD R6 R6 #-1 ; Add variable x to the stack 
ADD R6 R6 #-1 ; Add variable y to the stack 
LD R0 CST4 ; R0 <- cst 3
BR IGNORE_CST4
CST4 .FILL #3
IGNORE_CST4
NOT R0 R0
ADD R0 R0 #1 ;  R0 <- -R0
STR R0 R5 #-1
LD R0 CST3 ; R0 <- cst 5
BR IGNORE_CST3
CST3 .FILL #5
IGNORE_CST3
STR R0 R5 #-2
LDR R0 R5 #-1
LD R0 CST2
BR IGNORE_CST2
CST2 .FILL #-1
IGNORE_CST2
STR R0 R5 #0
LDR R0 R5 #0
ADD R1 R5 R0
LDR R0 R1 #0
STR R0 R4 #0
LD R0 CST1 ; R0 <- cst 0
BR IGNORE_CST1
CST1 .FILL #0
IGNORE_CST1
LDR R7 R5 #-1 ; Restore R7
LDR R5 R5 #-2 ; Restore R5
STATIC_VAR
;
; --- STATIC VARIABLES ---
;
STATIC .BLKW #1
V_glob .BLKW #1
STACK .FILL xfdff
.END
; FUN_MULT x3008
; MULT_CHANGE_SIGN x300b
; MULT_INIT x300f
; MULT_LOOP x3012
; MULT_STOP x3016
; FUN_DIV x3017
; DIV_A_NEG x301c
; DIV_A_POS x3021
; DIV_AN_BN x3024
; DIV_AN_BP x3027
; DIV_AP_BN x3028
; DIV_AP_BP x302b
; DIV_NEG x302c
; DIV_POS x302f
; DIV_ENDSIGN x3030
; DIV_LOOP x3030
; DIV_END_LOOP x303b
; DIV_END x3040
; FUN_MOD x3042
; MOD_A_NEG x3046
; MOD_ENDSIGN x3048
; MOD_LOOP x3048
; MOD_END_LOOP x3053
; MOD_END x3054
; FUN_USER_main x3055
; IGNORE_CST4 x3062
; IGNORE_CST3 x3068
; IGNORE_CST2 x306d
; IGNORE_CST1 x3075
; STATIC_VAR x3077
; .END x307a
; --DEBUG---

